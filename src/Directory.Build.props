<Project>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)../, Directory.Build.props))\Directory.Build.props" Condition=" '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)../, Directory.Build.props))' != '' " />

  <PropertyGroup>
    <IsTestProject>false</IsTestProject>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks Condition=" $(Configuration) != 'Debug' ">netstandard2.1;netstandard2.0;net6.0;net6.0-windows;net5.0-windows;net6.0-android;net6.0-ios;net6.0-maccatalyst;net6.0-macos;net461;</TargetFrameworks>
    <TargetFrameworks Condition=" $(Configuration) == 'Debug' ">netstandard2.1;</TargetFrameworks>
    <!--<TargetFrameworks>netstandard2.1;netstandard2.0;net6.0;net6.0-windows;net6.0-android;net6.0-ios;net6.0-maccatalyst;Xamarin.iOS10;MonoAndroid90;MonoAndroid10.0;tizen40;Xamarin.Mac20;</TargetFrameworks>-->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <NoWarn>$(NoWarn);NU1703;CS8002</NoWarn>
  </PropertyGroup>

  <!--Remove platform specific targets on Linux as MAUI isn't supported on Linux-->
  <PropertyGroup Condition="$(Configuration.Contains('-Linux'))">
    <TargetFrameworks>netstandard2.1;netstandard2.0;net6.0;</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net5.0-windows')) ">
    <DefineConstants>$(DefineConstants);NET5_0_WINDOWS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="**\*.shared.cs" />
    <Compile Include="**\*.shared.*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
    <PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' OR $(TargetFramework.StartsWith('netstandard'))">
    <Compile Include="**\*.netstandard.cs" />
    <Compile Include="**\*.netstandard.*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.Contains('-windows')) OR '$(TargetFramework)' == 'net461' ">
    <Compile Include="**\*.windows.cs" />
    <Compile Include="**\*.windows.*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' == 'android' ">
    <Compile Include="**\*.android.cs" />
    <Compile Include="**\*.android.*.cs" />
    <AndroidResource Include="Resources\**\*.*" />
    <PackageReference Include="Xamarin.AndroidX.Browser" Version="1.3.0.6" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' == 'ios' ">
    <Compile Include="**\*.ios.cs" />
    <Compile Include="**\*.ios.*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' == 'maccatalyst' ">
    <Compile Include="**\*.ios.cs" />
    <Compile Include="**\*.ios.*.cs" />
    <Compile Include="**\*.maccatalyst.cs" />
    <Compile Include="**\*.maccatalyst.*.cs" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetPlatformIdentifier)' == 'macos' ">
    <Compile Include="**\*.macos.cs" />
    <Compile Include="**\*.macos.*.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <Compile Include="**\Nullable\**\*Attribute.cs" />
  </ItemGroup>

  <PropertyGroup>
    <InvariantGlobalization Condition="$(TargetFramework.Contains('-maccatalyst'))">true</InvariantGlobalization>
    <RuntimeIdentifier Condition="$(TargetFramework.Contains('-ios'))">iossimulator-x64</RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(TargetFramework.Contains('-maccatalyst'))">maccatalyst-x64</RuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NetworkVisor.Core" Version="2.3.133-prerelease" />
  </ItemGroup>

  <PropertyGroup>
    <EnableDefaultItems>true</EnableDefaultItems>
    <SingleProject>true</SingleProject>
    <MonoAndroidResourcePrefix>Resources</MonoAndroidResourcePrefix>
    <MonoAndroidAssetsPrefix>Assets</MonoAndroidAssetsPrefix>
    <iOSProjectFolder>$(MSBuildThisFileDirectory)</iOSProjectFolder>
    <MacCatalystProjectFolder>$(MSBuildThisFileDirectory)</MacCatalystProjectFolder>
    <WindowsProjectFolder>$(MSBuildThisFileDirectory)</WindowsProjectFolder>
  </PropertyGroup>

  <!-- Android -->
  <ItemGroup Condition=" '$(EnableDefaultItems)' == 'true' and '$(SingleProject)' == 'true' and '$(TargetPlatformIdentifier)' == 'android' and '$(MonoAndroidResourcePrefix)' != '' ">
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/*/*.xml" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/*/*.axml" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/*/*.png" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/*/*.jpg" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/*/*.gif" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/font/*.ttf" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/font/*.otf" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/font/*.ttc" />
    <AndroidResource Include="$(MonoAndroidResourcePrefix)/raw/*" Exclude="$(MonoAndroidResourcePrefix)/raw/.*" />
    <AndroidAsset Include="$(MonoAndroidAssetsPrefix)/**/*" Exclude="$(MonoAndroidAssetsPrefix)/**/.*/**" />
  </ItemGroup>

  <!-- iOS -->
  <ItemGroup Condition=" '$(EnableDefaultItems)' == 'true' and '$(SingleProject)' == 'true' and '$(TargetPlatformIdentifier)' == 'ios' and '$(iOSProjectFolder)' != '' ">
    <None
        Include="$(iOSProjectFolder)Info.plist"
        Condition="Exists('$(iOSProjectFolder)Info.plist')"
        Exclude="$(_SingleProjectiOSExcludes)"
        LogicalName="Info.plist"
        IsDefaultItem="true"
    />
    <BundleResource
        Include="$(iOSProjectFolder)Resources\**"
        Exclude="$(_SingleProjectiOSExcludes)"
        IsDefaultItem="true"
    />
    <ImageAsset
        Include="$(iOSProjectFolder)**/*.xcassets/**/*.png;$(iOSProjectFolder)**/*.xcassets/*/*.jpg;$(iOSProjectFolder)**/*.xcassets/**/*.pdf;$(iOSProjectFolder)**/*.xcassets/**/*.json"
        Exclude="$(_SingleProjectiOSExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        Visible="false"
        IsDefaultItem="true"
    />
    <SceneKitAsset
        Include="$(iOSProjectFolder)**/*.scnassets/*"
        Exclude="$(_SingleProjectiOSExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        IsDefaultItem="true"
    />
    <InterfaceDefinition
        Include="$(iOSProjectFolder)**/*.storyboard;$(iOSProjectFolder)**/*.xib"
        Exclude="$(_SingleProjectiOSExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        IsDefaultItem="true"
    />
  </ItemGroup>

  <!-- MacCatalyst -->
  <ItemGroup Condition=" '$(EnableDefaultItems)' == 'true' and '$(SingleProject)' == 'true' and '$(TargetPlatformIdentifier)' == 'maccatalyst' and '$(MacCatalystProjectFolder)' != '' ">
    <None
        Include="$(MacCatalystProjectFolder)Info.plist"
        Condition="Exists('$(MacCatalystProjectFolder)Info.plist')"
        Exclude="$(_SingleProjectMacCatalystExcludes)"
        LogicalName="Info.plist"
        IsDefaultItem="true"
    />
    <BundleResource
        Include="$(MacCatalystProjectFolder)Resources\**"
        Exclude="$(_SingleProjectMacCatalystExcludes)"
        IsDefaultItem="true"
    />
    <ImageAsset
        Include="$(MacCatalystProjectFolder)**/*.xcassets/**/*.png;$(MacCatalystProjectFolder)**/*.xcassets/*/*.jpg;$(MacCatalystProjectFolder)**/*.xcassets/**/*.pdf;$(MacCatalystProjectFolder)**/*.xcassets/**/*.json"
        Exclude="$(_SingleProjectMacCatalystExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        Visible="false"
        IsDefaultItem="true"
    />
    <SceneKitAsset
        Include="$(MacCatalystProjectFolder)**/*.scnassets/*"
        Exclude="$(_SingleProjectMacCatalystExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        IsDefaultItem="true"
    />
    <InterfaceDefinition
        Include="$(MacCatalystProjectFolder)**/*.storyboard;$(MacCatalystProjectFolder)**/*.xib"
        Exclude="$(_SingleProjectMacCatalystExcludes)"
        Link="%(RecursiveDir)%(FileName)%(Extension)"
        IsDefaultItem="true"
    />
  </ItemGroup>

  <!-- Windows -->
  <ItemGroup Condition=" '$(EnableDefaultItems)' == 'true' and '$(SingleProject)' == 'true' and '$(TargetPlatformIdentifier)' == 'windows' and '$(WindowsProjectFolder)' != '' ">
    <Manifest
        Include="$(ApplicationManifest)"
        Condition="Exists('$(ApplicationManifest)')" />
    <AppxManifest
        Include="$(PackageManifest)"
        Condition="Exists('$(PackageManifest)')" />
    <ApplicationDefinition
        Condition="Exists('$(WindowsProjectFolder)App.xaml')"
        Include="$(WindowsProjectFolder)App.xaml">
      <Generator>MSBuild:Compile</Generator>
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </ApplicationDefinition>
    <ApplicationDefinition
        Condition="Exists('$(WindowsProjectFolder)\Application.xaml')"
        Include="$(WindowsProjectFolder)Application.xaml">
      <Generator>MSBuild:Compile</Generator>
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </ApplicationDefinition>
    <Page
        Include="$(WindowsProjectFolder)**/*.xaml"
        Exclude="$(_SingleProjectWindowsExcludes);@(ApplicationDefinition)">
      <Generator>MSBuild:Compile</Generator>
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </Page>
  </ItemGroup>


</Project>
